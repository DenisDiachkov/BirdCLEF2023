mode: !!str 'train'
wall: !!bool False
seed: &seed !!int 42
experiment_name: !!str Example2
resume_path: null
trainer_params:
  deterministic: !!bool True
  devices: [0, 1]
  accelerator: !!str 'cuda'
  num_sanity_val_steps: !!int 1
  max_epochs: !!int 100
trainer_callbacks: [
  {
    callback: pytorch_lightning.callbacks.early_stopping.EarlyStopping,
    callback_params: {
      monitor: !!str 'val_loss',
      min_delta: !!float 0.0001,
      patience: !!int 10,
      verbose: !!bool True,
      mode: !!str 'min'
    }
  },
  {
    callback: pytorch_lightning.callbacks.model_checkpoint.ModelCheckpoint,
    callback_params: {
      monitor: !!str 'val_loss',
      filename: !!str "best_Epoch={epoch}_Loss={val_loss:.2f}",
      save_top_k: !!int 1,
      save_last: !!bool True,
      mode: !!str 'min',
      verbose: !!bool True,
    }
  }
]

lightning_module: module.BaseModule
lightning_module_params:
  model: model.sample_model.SampleModel
  model_params:
    in_features: !!int 10
    out_features: !!int 10
  optimizer: torch.optim.Adam
  optimizer_params:
    lr: !!float 0.001
    betas: [!!float 0.9, !!float 0.999]
    eps: !!float 1e-08
    weight_decay: !!float 0.0001
    amsgrad: !!bool False
  scheduler: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts
  scheduler_params:
    T_0: !!int 10
    T_mult: !!int 2
    eta_min: !!float 0.00001
    last_epoch: !!int -1
  criterion: criterion.multi_criterion.MultiCriterion
  criterion_params: { 
    criterions: [ torch.nn.MSELoss,torch.nn.L1Loss ],
    criterion_weights: [!!float 1.0, !!float 1.0],
  }


datamodule_params:
  dataset: dataset.sample_dataset.SampleDataset
  dataset_params:
    in_features: !!int 10
    out_features: !!int 10
  train_dataset_params:
    num_samples: !!int 1000
  val_dataset_params:
    num_samples: !!int 100

  dataloader_params:
    batch_size: !!int 1
    shuffle: !!bool True
    num_workers: !!int 8
    pin_memory: !!bool True
    drop_last: !!bool True
  train_dataloader_params:
    shuffle: !!bool True
  val_dataloader_params:
    shuffle: !!bool False
    drop_last: !!bool False

  
